export default function WinnersCard({ pub }) {
  const votes = [
    { team: 'Moon', votes: 1324 },
    { team: 'Random', votes: 2000 },
    { team: 'Sun', votes: 100 },
  ]
  const voteSum = votes.reduce((a, b) => a + b.votes, 0)
  votes.forEach((v) => (v.perc = Math.floor((v.votes / voteSum) * 100)))
  console.log(votes, voteSum)
  return (
    <div className="min-w-md max-w-4xl rounded-md overflow-hidden shadow-xl w-5/6 m-2 bg-white  hover:shadow-hacker-accent-600 hover:translate-y-1 transition-all shadow-slate-600 py-5 px-8 flex flex-col">
      <div className="flex flex-row justify-between">
        <div className="flex flex-col">
          <span className="text-2xl font-normal">Winners</span>
          <span className="mt-1 font-normal">5432 Vots in Total</span>
        </div>

        <div className="flex flex-col ">
          <button>Select Category</button>
        </div>
      </div>
      {votes
        .sort((v1, v2) => v2.votes - v1.votes)
        .slice(0, 3)
        .map((v, i) => (
          <div className="flex flex-row w-full mt-2 " key={i}>
            <svg
              width="43"
              height="43"
              viewBox="0 0 43 43"
              fill="none"
              className="mr-1"
              xmlns="http://www.w3.org/2000/svg"
            >
              {i == 0 && (
                <path
                  d="M38.9699 10.75H34.9387V9.40625C34.9387 8.69348 34.6555 8.0099 34.1515 7.5059C33.6475 7.0019 32.9639 6.71875 32.2512 6.71875H10.7512C10.0384 6.71875 9.35483 7.0019 8.85082 7.5059C8.34682 8.0099 8.06367 8.69348 8.06367 9.40625V10.75H4.01562C3.30286 10.75 2.61928 11.0331 2.11528 11.5372C1.61127 12.0412 1.32813 12.7247 1.32812 13.4375V16.125C1.32812 17.9069 2.03599 19.6159 3.296 20.8759C4.55601 22.1359 6.26495 22.8438 8.04688 22.8438H8.71875C10.348 27.866 14.7992 31.6285 20.1574 32.1828V36.2812H16.1262C15.7698 36.2812 15.428 36.4228 15.176 36.6748C14.924 36.9268 14.7824 37.2686 14.7824 37.625C14.7824 37.9814 14.924 38.3232 15.176 38.5752C15.428 38.8272 15.7698 38.9688 16.1262 38.9688H26.8762C27.2326 38.9688 27.5743 38.8272 27.8263 38.5752C28.0784 38.3232 28.2199 37.9814 28.2199 37.625C28.2199 37.2686 28.0784 36.9268 27.8263 36.6748C27.5743 36.4228 27.2326 36.2812 26.8762 36.2812H22.8449V32.1828C25.4633 31.9257 27.9478 30.9028 29.9882 29.2418C32.0285 27.5808 33.5342 25.3555 34.3172 22.8438H34.9387C36.7206 22.8438 38.4295 22.1359 39.6895 20.8759C40.9496 19.6159 41.6574 17.9069 41.6574 16.125V13.4375C41.6574 12.7247 41.3743 12.0412 40.8703 11.5372C40.3663 11.0331 39.6827 10.75 38.9699 10.75ZM8.04688 20.1562C6.97772 20.1562 5.95236 19.7315 5.19635 18.9755C4.44034 18.2195 4.01562 17.1942 4.01562 16.125V13.4375H8.06367V18.6613C8.06607 19.1607 8.09411 19.6597 8.14766 20.1562H8.04688ZM38.9699 16.125C38.9655 17.1928 38.5394 18.2156 37.7843 18.9706C37.0293 19.7257 36.0065 20.1518 34.9387 20.1562H34.8715C34.9194 19.71 34.9418 19.2613 34.9387 18.8125V13.4375H38.9699V16.125Z"
                  fill="#FFD700"
                />
              )}

              {i == 1 && (
                <path
                  d="M37.9699 4.75H33.9387V3.40625C33.9387 2.69348 33.6555 2.0099 33.1515 1.5059C32.6475 1.0019 31.9639 0.71875 31.2512 0.71875H9.75117C9.0384 0.71875 8.35483 1.0019 7.85082 1.5059C7.34682 2.0099 7.06367 2.69348 7.06367 3.40625V4.75H3.01562C2.30286 4.75 1.61928 5.03315 1.11528 5.53715C0.611271 6.04116 0.328125 6.72473 0.328125 7.4375V10.125C0.328125 11.9069 1.03599 13.6159 2.296 14.8759C3.55601 16.1359 5.26495 16.8438 7.04688 16.8438H7.71875C9.34805 21.866 13.7992 25.6285 19.1574 26.1828V30.2812H15.1262C14.7698 30.2812 14.428 30.4228 14.176 30.6748C13.924 30.9268 13.7824 31.2686 13.7824 31.625C13.7824 31.9814 13.924 32.3232 14.176 32.5752C14.428 32.8272 14.7698 32.9688 15.1262 32.9688H25.8762C26.2326 32.9688 26.5743 32.8272 26.8263 32.5752C27.0784 32.3232 27.2199 31.9814 27.2199 31.625C27.2199 31.2686 27.0784 30.9268 26.8263 30.6748C26.5743 30.4228 26.2326 30.2812 25.8762 30.2812H21.8449V26.1828C24.4633 25.9257 26.9478 24.9028 28.9882 23.2418C31.0285 21.5808 32.5342 19.3555 33.3172 16.8438H33.9387C35.7206 16.8438 37.4295 16.1359 38.6895 14.8759C39.9496 13.6159 40.6574 11.9069 40.6574 10.125V7.4375C40.6574 6.72473 40.3743 6.04116 39.8703 5.53715C39.3663 5.03315 38.6827 4.75 37.9699 4.75V4.75ZM7.04688 14.1562C5.97772 14.1562 4.95236 13.7315 4.19635 12.9755C3.44034 12.2195 3.01563 11.1942 3.01562 10.125V7.4375H7.06367V12.6613C7.06607 13.1607 7.09411 13.6597 7.14766 14.1562H7.04688ZM37.9699 10.125C37.9655 11.1928 37.5394 12.2156 36.7843 12.9706C36.0293 13.7257 35.0065 14.1518 33.9387 14.1562H33.8715C33.9194 13.71 33.9418 13.2613 33.9387 12.8125V7.4375H37.9699V10.125Z"
                  fill="#D4D4D4"
                />
              )}
              {i == 2 && (
                <path
                  d="M37.9699 4.75H33.9387V3.40625C33.9387 2.69348 33.6555 2.0099 33.1515 1.5059C32.6475 1.0019 31.9639 0.71875 31.2512 0.71875H9.75117C9.0384 0.71875 8.35483 1.0019 7.85082 1.5059C7.34682 2.0099 7.06367 2.69348 7.06367 3.40625V4.75H3.01562C2.30286 4.75 1.61928 5.03315 1.11528 5.53715C0.611271 6.04116 0.328125 6.72473 0.328125 7.4375V10.125C0.328125 11.9069 1.03599 13.6159 2.296 14.8759C3.55601 16.1359 5.26495 16.8438 7.04688 16.8438H7.71875C9.34805 21.866 13.7992 25.6285 19.1574 26.1828V30.2812H15.1262C14.7698 30.2812 14.428 30.4228 14.176 30.6748C13.924 30.9268 13.7824 31.2686 13.7824 31.625C13.7824 31.9814 13.924 32.3232 14.176 32.5752C14.428 32.8272 14.7698 32.9688 15.1262 32.9688H25.8762C26.2326 32.9688 26.5743 32.8272 26.8263 32.5752C27.0784 32.3232 27.2199 31.9814 27.2199 31.625C27.2199 31.2686 27.0784 30.9268 26.8263 30.6748C26.5743 30.4228 26.2326 30.2812 25.8762 30.2812H21.8449V26.1828C24.4633 25.9257 26.9478 24.9028 28.9882 23.2418C31.0285 21.5808 32.5342 19.3555 33.3172 16.8438H33.9387C35.7206 16.8438 37.4295 16.1359 38.6895 14.8759C39.9496 13.6159 40.6574 11.9069 40.6574 10.125V7.4375C40.6574 6.72473 40.3743 6.04116 39.8703 5.53715C39.3663 5.03315 38.6827 4.75 37.9699 4.75V4.75ZM7.04688 14.1562C5.97772 14.1562 4.95236 13.7315 4.19635 12.9755C3.44034 12.2195 3.01563 11.1942 3.01562 10.125V7.4375H7.06367V12.6613C7.06607 13.1607 7.09411 13.6597 7.14766 14.1562H7.04688ZM37.9699 10.125C37.9655 11.1928 37.5394 12.2156 36.7843 12.9706C36.0293 13.7257 35.0065 14.1518 33.9387 14.1562H33.8715C33.9194 13.71 33.9418 13.2613 33.9387 12.8125V7.4375H37.9699V10.125Z"
                  fill="#6E3A06"
                />
              )}
            </svg>
            <div className="w-3/4 align-middle items-start flex flex-col">
              <div
                className={` bg-hacker-color-200 text-gray-50 px-2 font-light rounded-md h-3/4 align-middle flex flex-col justify-center`}
                style={{ width: `${v.perc.toString()}%` }}
              ></div>
              <span className="text-gray-500">
                Team {v.team}: {v.votes} Votes
              </span>
            </div>
            <div>
              <button
                className={` md:flex transition ease-out duration-500 font-semibold py-3 px-4 mx-4 rounded-lg bg-hacker-accent-400 hover:bg-hacker-accent-200 text-gray-50 w-full flex-row justify-center`}
              >
                View Publication
              </button>
            </div>
          </div>
        ))}
    </div>
  )
}
